name: Build

on:
  pull_request:
  push:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
        arch: [x64]
        mode: [release]

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0      # grab full history
        fetch-tags: true    # include all tags
        
    - name: Checkout submodules
      run: |
        git submodule sync --recursive
        git submodule update --init --force --recursive --depth=1

    # Force xmake to a specific folder (for cache)
    #- name: Set xmake env
    #  run: echo "XMAKE_GLOBALDIR=$(pwd)/xmake-global" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1

    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake.exe repo --update

    # Setup compilation mode and install project dependencies
    - name: Configure xmake and install dependencies
      run: xmake.exe config --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --yes

    # Install the result files
    - name: Build and create package
      run: xmake.exe package

    # Upload artifacts
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.mode }}
        path: |
          package/**
          !package/**/*.pdb
    
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.mode }}-pdb
        path: package/**/*.pdb
